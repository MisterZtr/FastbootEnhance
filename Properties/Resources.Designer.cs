//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FastbootEnhance.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FastbootEnhance.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About.
        /// </summary>
        public static string about {
            get {
                return ResourceManager.GetString("about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fastboot Enhance.
        /// </summary>
        public static string app_name {
            get {
                return ResourceManager.GetString("app_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author: LibXZR @ akr-developers.com.
        /// </summary>
        public static string author {
            get {
                return ResourceManager.GetString("author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disabled.
        /// </summary>
        public static string disabled {
            get {
                return ResourceManager.GetString("disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enabled.
        /// </summary>
        public static string enabled {
            get {
                return ResourceManager.GetString("enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string error {
            get {
                return ResourceManager.GetString("error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown.
        /// </summary>
        public static string fastboot_0_size {
            get {
                return ResourceManager.GetString("fastboot_0_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Basic Properties.
        /// </summary>
        public static string fastboot_basic_prop {
            get {
                return ResourceManager.GetString("fastboot_basic_prop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel pending update.
        /// </summary>
        public static string fastboot_cancel_update {
            get {
                return ResourceManager.GetString("fastboot_cancel_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Double click to choose the target device:.
        /// </summary>
        public static string fastboot_choose_device {
            get {
                return ResourceManager.GetString("fastboot_choose_device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Virtual A/B temporary partitions exist.
        /// </summary>
        public static string fastboot_cow_exist_str0 {
            get {
                return ResourceManager.GetString("fastboot_cow_exist_str0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The temporary partitions created during the Virtual A/B system update exist in the device, forcing it to continue may cause the flashing to fail due to insufficient space in the super partition, and thus brick the device..
        /// </summary>
        public static string fastboot_cow_exist_str1 {
            get {
                return ResourceManager.GetString("fastboot_cow_exist_str1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ( You can manually delete the temporary partitions ending in &quot;cow&quot; to resolve this warning if the Virtual A/B update is not in progress ).
        /// </summary>
        public static string fastboot_cow_exist_str2 {
            get {
                return ResourceManager.GetString("fastboot_cow_exist_str2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Would you like to continue?.
        /// </summary>
        public static string fastboot_cow_exist_str3 {
            get {
                return ResourceManager.GetString("fastboot_cow_exist_str3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create new logical partition.
        /// </summary>
        public static string fastboot_create_dynamic_partition {
            get {
                return ResourceManager.GetString("fastboot_create_dynamic_partition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current Device: .
        /// </summary>
        public static string fastboot_current_device {
            get {
                return ResourceManager.GetString("fastboot_current_device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current Slot.
        /// </summary>
        public static string fastboot_current_slot {
            get {
                return ResourceManager.GetString("fastboot_current_slot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Device.
        /// </summary>
        public static string fastboot_device {
            get {
                return ResourceManager.GetString("fastboot_device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Device Name.
        /// </summary>
        public static string fastboot_device_name {
            get {
                return ResourceManager.GetString("fastboot_device_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target device is not exist.
        /// </summary>
        public static string fastboot_device_not_exist {
            get {
                return ResourceManager.GetString("fastboot_device_not_exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fastboot Visualization.
        /// </summary>
        public static string fastboot_enhance {
            get {
                return ResourceManager.GetString("fastboot_enhance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Expand logical partition.
        /// </summary>
        public static string fastboot_expand_dynamic_partition {
            get {
                return ResourceManager.GetString("fastboot_expand_dynamic_partition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter by name:.
        /// </summary>
        public static string fastboot_filter_by_partition_name {
            get {
                return ResourceManager.GetString("fastboot_filter_by_partition_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flash Payload.bin.
        /// </summary>
        public static string fastboot_flash_payload {
            get {
                return ResourceManager.GetString("fastboot_flash_payload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ignore Unknown Partitions.
        /// </summary>
        public static string fastboot_ignore_unknown {
            get {
                return ResourceManager.GetString("fastboot_ignore_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In Fastbootd.
        /// </summary>
        public static string fastboot_is_userspace {
            get {
                return ResourceManager.GetString("fastboot_is_userspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This operation does not allow multiple partitions to be selected..
        /// </summary>
        public static string fastboot_not_support_multiselect {
            get {
                return ResourceManager.GetString("fastboot_not_support_multiselect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This operation is only supported for logical partitions..
        /// </summary>
        public static string fastboot_only_logical {
            get {
                return ResourceManager.GetString("fastboot_only_logical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Actions.
        /// </summary>
        public static string fastboot_partition_action {
            get {
                return ResourceManager.GetString("fastboot_partition_action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create.
        /// </summary>
        public static string fastboot_partition_action_create {
            get {
                return ResourceManager.GetString("fastboot_partition_action_create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete.
        /// </summary>
        public static string fastboot_partition_action_delete {
            get {
                return ResourceManager.GetString("fastboot_partition_action_delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Erase.
        /// </summary>
        public static string fastboot_partition_action_erase {
            get {
                return ResourceManager.GetString("fastboot_partition_action_erase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Flash.
        /// </summary>
        public static string fastboot_partition_action_flash {
            get {
                return ResourceManager.GetString("fastboot_partition_action_flash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resize.
        /// </summary>
        public static string fastboot_partition_action_resize {
            get {
                return ResourceManager.GetString("fastboot_partition_action_resize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на is Logical.
        /// </summary>
        public static string fastboot_partition_is_dynamic {
            get {
                return ResourceManager.GetString("fastboot_partition_is_dynamic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        public static string fastboot_partition_name {
            get {
                return ResourceManager.GetString("fastboot_partition_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partition name is empty..
        /// </summary>
        public static string fastboot_partition_name_empty {
            get {
                return ResourceManager.GetString("fastboot_partition_name_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Size.
        /// </summary>
        public static string fastboot_partition_size {
            get {
                return ResourceManager.GetString("fastboot_partition_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Size (B).
        /// </summary>
        public static string fastboot_partition_size_b {
            get {
                return ResourceManager.GetString("fastboot_partition_size_b", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partition size is empty..
        /// </summary>
        public static string fastboot_partition_size_empty {
            get {
                return ResourceManager.GetString("fastboot_partition_size_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid partition size..
        /// </summary>
        public static string fastboot_partition_size_invalid {
            get {
                return ResourceManager.GetString("fastboot_partition_size_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to shrink a partition. You can delete and recreate it..
        /// </summary>
        public static string fastboot_partition_size_unable_shrink {
            get {
                return ResourceManager.GetString("fastboot_partition_size_unable_shrink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partitions.
        /// </summary>
        public static string fastboot_partition_table {
            get {
                return ResourceManager.GetString("fastboot_partition_table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        public static string fastboot_prop_name {
            get {
                return ResourceManager.GetString("fastboot_prop_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value.
        /// </summary>
        public static string fastboot_prop_value {
            get {
                return ResourceManager.GetString("fastboot_prop_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reboot to BootLoader.
        /// </summary>
        public static string fastboot_reboot_bootloader {
            get {
                return ResourceManager.GetString("fastboot_reboot_bootloader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reboot to Fastbootd.
        /// </summary>
        public static string fastboot_reboot_fastbootd {
            get {
                return ResourceManager.GetString("fastboot_reboot_fastbootd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reboot to Recovery.
        /// </summary>
        public static string fastboot_reboot_recovery {
            get {
                return ResourceManager.GetString("fastboot_reboot_recovery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reboot to System.
        /// </summary>
        public static string fastboot_reboot_system {
            get {
                return ResourceManager.GetString("fastboot_reboot_system", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disconnect.
        /// </summary>
        public static string fastboot_remove_device {
            get {
                return ResourceManager.GetString("fastboot_remove_device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Seamless Update.
        /// </summary>
        public static string fastboot_seamless_update {
            get {
                return ResourceManager.GetString("fastboot_seamless_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secure Boot.
        /// </summary>
        public static string fastboot_secure_boot {
            get {
                return ResourceManager.GetString("fastboot_secure_boot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Serial Number.
        /// </summary>
        public static string fastboot_serial_num {
            get {
                return ResourceManager.GetString("fastboot_serial_num", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activate Slot A.
        /// </summary>
        public static string fastboot_setactive_a {
            get {
                return ResourceManager.GetString("fastboot_setactive_a", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activate Slot B.
        /// </summary>
        public static string fastboot_setactive_b {
            get {
                return ResourceManager.GetString("fastboot_setactive_b", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show logs.
        /// </summary>
        public static string fastboot_show_logs {
            get {
                return ResourceManager.GetString("fastboot_show_logs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target partition not yet selected..
        /// </summary>
        public static string fastboot_target_partition_not_selected {
            get {
                return ResourceManager.GetString("fastboot_target_partition_not_selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The following partitions to flash may be unknown:.
        /// </summary>
        public static string fastboot_unknown_partition_str0 {
            get {
                return ResourceManager.GetString("fastboot_unknown_partition_str0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can check the &quot;Ignore unknown partitions&quot; checkbox to disable this warning, the presence of unknown partitions does not mean that the flashing will fail or the device will brick..
        /// </summary>
        public static string fastboot_unknown_partition_str1 {
            get {
                return ResourceManager.GetString("fastboot_unknown_partition_str1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You may need to reboot to fastbootd mode..
        /// </summary>
        public static string fastboot_unknown_partition_str2 {
            get {
                return ResourceManager.GetString("fastboot_unknown_partition_str2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на System Update Status.
        /// </summary>
        public static string fastboot_update_status {
            get {
                return ResourceManager.GetString("fastboot_update_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merging.
        /// </summary>
        public static string fastboot_update_status_merging {
            get {
                return ResourceManager.GetString("fastboot_update_status_merging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        public static string fastboot_update_status_none {
            get {
                return ResourceManager.GetString("fastboot_update_status_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Snapshotted.
        /// </summary>
        public static string fastboot_update_status_snapshotted {
            get {
                return ResourceManager.GetString("fastboot_update_status_snapshotted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на System update is in progress.
        /// </summary>
        public static string fastboot_vab_staging_str0 {
            get {
                return ResourceManager.GetString("fastboot_vab_staging_str0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The device is in the process of system update, forcing the operation may brick the device..
        /// </summary>
        public static string fastboot_vab_staging_str1 {
            get {
                return ResourceManager.GetString("fastboot_vab_staging_str1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ( You can reboot the device to the system and wait a while until the update process is complete ).
        /// </summary>
        public static string fastboot_vab_staging_str2 {
            get {
                return ResourceManager.GetString("fastboot_vab_staging_str2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Would you like to continue?.
        /// </summary>
        public static string fastboot_vab_staging_str3 {
            get {
                return ResourceManager.GetString("fastboot_vab_staging_str3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Would you like to disable the verification in vbmeta?.
        /// </summary>
        public static string fastboot_vbmeta_disable_verify {
            get {
                return ResourceManager.GetString("fastboot_vbmeta_disable_verify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Disable verification.
        /// </summary>
        public static string fastboot_vbmeta_disable_verify_title {
            get {
                return ResourceManager.GetString("fastboot_vbmeta_disable_verify_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Logger.
        /// </summary>
        public static string logger {
            get {
                return ResourceManager.GetString("logger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No.
        /// </summary>
        public static string no {
            get {
                return ResourceManager.GetString("no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на OK.
        /// </summary>
        public static string ok {
            get {
                return ResourceManager.GetString("ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Opensource.
        /// </summary>
        public static string open_source {
            get {
                return ResourceManager.GetString("open_source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Operation completed.
        /// </summary>
        public static string operation_completed {
            get {
                return ResourceManager.GetString("operation_completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Operation is not supported..
        /// </summary>
        public static string operation_not_supported {
            get {
                return ResourceManager.GetString("operation_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Basic Properties.
        /// </summary>
        public static string payload_basic_properties {
            get {
                return ResourceManager.GetString("payload_basic_properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Blocksize.
        /// </summary>
        public static string payload_blocksize {
            get {
                return ResourceManager.GetString("payload_blocksize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Browse.
        /// </summary>
        public static string payload_browse {
            get {
                return ResourceManager.GetString("payload_browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current file: .
        /// </summary>
        public static string payload_current_file {
            get {
                return ResourceManager.GetString("payload_current_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Data Blobs Size.
        /// </summary>
        public static string payload_data_size {
            get {
                return ResourceManager.GetString("payload_data_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Payload Dumper.
        /// </summary>
        public static string payload_dumper {
            get {
                return ResourceManager.GetString("payload_dumper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dynamic Partition Metadata.
        /// </summary>
        public static string payload_dynamic_partition_metadata {
            get {
                return ResourceManager.GetString("payload_dynamic_partition_metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An error has occurred..
        /// </summary>
        public static string payload_error_occur {
            get {
                return ResourceManager.GetString("payload_error_occur", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ignore unknown operations.
        /// </summary>
        public static string payload_extract_ignore_unknown {
            get {
                return ResourceManager.GetString("payload_extract_ignore_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ignore checksum.
        /// </summary>
        public static string payload_extract_ignore_verify {
            get {
                return ResourceManager.GetString("payload_extract_ignore_verify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extract Image.
        /// </summary>
        public static string payload_extract_image {
            get {
                return ResourceManager.GetString("payload_extract_image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Allow incremental.
        /// </summary>
        public static string payload_extract_incremental {
            get {
                return ResourceManager.GetString("payload_extract_incremental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extracting options.
        /// </summary>
        public static string payload_extract_options {
            get {
                return ResourceManager.GetString("payload_extract_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full Package.
        /// </summary>
        public static string payload_full_package {
            get {
                return ResourceManager.GetString("payload_full_package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to extract images from an incremental package..
        /// </summary>
        public static string payload_incremental_warning {
            get {
                return ResourceManager.GetString("payload_incremental_warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manifest Size.
        /// </summary>
        public static string payload_manifest_size {
            get {
                return ResourceManager.GetString("payload_manifest_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Metadata Signatures (Base64).
        /// </summary>
        public static string payload_metadata_signature {
            get {
                return ResourceManager.GetString("payload_metadata_signature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Metadata Signatures Size.
        /// </summary>
        public static string payload_metadata_signature_size {
            get {
                return ResourceManager.GetString("payload_metadata_signature_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No dynamic partition metadata.
        /// </summary>
        public static string payload_no_dynamic_metadata {
            get {
                return ResourceManager.GetString("payload_no_dynamic_metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No payload has been specified, click the button browse, or drag in a file..
        /// </summary>
        public static string payload_no_file_str {
            get {
                return ResourceManager.GetString("payload_no_file_str", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partitions Included: .
        /// </summary>
        public static string payload_partition_group_include {
            get {
                return ResourceManager.GetString("payload_partition_group_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partition Group Name: .
        /// </summary>
        public static string payload_partition_group_name {
            get {
                return ResourceManager.GetString("payload_partition_group_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partition Group Size: .
        /// </summary>
        public static string payload_partition_group_size {
            get {
                return ResourceManager.GetString("payload_partition_group_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Partitions.
        /// </summary>
        public static string payload_partitions {
            get {
                return ResourceManager.GetString("payload_partitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter by name:.
        /// </summary>
        public static string payload_partitions_filter_by_name {
            get {
                return ResourceManager.GetString("payload_partitions_filter_by_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checksum (Base64).
        /// </summary>
        public static string payload_partitions_hash {
            get {
                return ResourceManager.GetString("payload_partitions_hash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        public static string payload_partitions_name {
            get {
                return ResourceManager.GetString("payload_partitions_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Size.
        /// </summary>
        public static string payload_partitions_size {
            get {
                return ResourceManager.GetString("payload_partitions_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        public static string payload_property_name {
            get {
                return ResourceManager.GetString("payload_property_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value.
        /// </summary>
        public static string payload_property_value {
            get {
                return ResourceManager.GetString("payload_property_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string payload_remove_file {
            get {
                return ResourceManager.GetString("payload_remove_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Signatures (Base64).
        /// </summary>
        public static string payload_signature {
            get {
                return ResourceManager.GetString("payload_signature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Signatures Size.
        /// </summary>
        public static string payload_signature_size {
            get {
                return ResourceManager.GetString("payload_signature_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Snapshot enabled: .
        /// </summary>
        public static string payload_snapshot_enabled {
            get {
                return ResourceManager.GetString("payload_snapshot_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Target partitions to extract not yet selected..
        /// </summary>
        public static string payload_target_partition_not_selected {
            get {
                return ResourceManager.GetString("payload_target_partition_not_selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Timestamp.
        /// </summary>
        public static string payload_timestamp {
            get {
                return ResourceManager.GetString("payload_timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to drop multiple files..
        /// </summary>
        public static string payload_unable_drop_multifile {
            get {
                return ResourceManager.GetString("payload_unable_drop_multifile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incompatible file format..
        /// </summary>
        public static string payload_unsupported_format {
            get {
                return ResourceManager.GetString("payload_unsupported_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Payload Version.
        /// </summary>
        public static string payload_version {
            get {
                return ResourceManager.GetString("payload_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The program is already running.
        /// </summary>
        public static string program_already_running {
            get {
                return ResourceManager.GetString("program_already_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Release at www.akr-developers.com.
        /// </summary>
        public static string release_at {
            get {
                return ResourceManager.GetString("release_at", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the path to save.
        /// </summary>
        public static string select_save_path {
            get {
                return ResourceManager.GetString("select_save_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown.
        /// </summary>
        public static string unknown {
            get {
                return ResourceManager.GetString("unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Thread.
        /// </summary>
        public static string visit_thread {
            get {
                return ResourceManager.GetString("visit_thread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Yes.
        /// </summary>
        public static string yes {
            get {
                return ResourceManager.GetString("yes", resourceCulture);
            }
        }
    }
}
